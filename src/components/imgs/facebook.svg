<?xml version="1.0"?>
<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:svgjs="http://svgjs.com/svgjs" version="1.1" width="512" height="512" x="0" y="0" viewBox="0 0 474.294 474.294" style="enable-background:new 0 0 512 512" xml:space="preserve" class=""><circle r="237.147" cx="237.147" cy="237.147" fill="#45d3e7" shape="circle" transform="matrix(0.8,0,0,0.8,47.429400634765614,47.429400634765614)"/><g transform="matrix(0.7,0,0,0.7,71.1440643310547,71.1440643310547)"><script id="metastreaminitscript">(function() {
    document.getElementById('metastreaminitscript').remove()

    const INIT_TIMEOUT = 5e3
    const isFirefox = navigator.userAgent.toLowerCase().includes('firefox')

    //=========================================================================
    // document.createElement proxy
    //=========================================================================

    window.__metastreamMediaElements = new Set()

    // Proxy document.createElement to trap media elements created in-memory
    const origCreateElement = document.createElement
    const proxyCreateElement = function() {
      const element = origCreateElement.apply(document, arguments)
      if (window.__metastreamMediaElements &amp;&amp; element instanceof HTMLMediaElement) {
        window.__metastreamMediaElements.add(element)
      }
      return element
    }
    proxyCreateElement.toString = origCreateElement.toString.bind(origCreateElement)
    document.createElement = proxyCreateElement

    setTimeout(() =&gt; {
      if (window.__metastreamMediaElements) {
        window.__metastreamMediaElements.clear()
        window.__metastreamMediaElements = undefined
      }
    }, INIT_TIMEOUT)

    //=========================================================================
    // navigator.mediaSession proxy (Firefox)
    //=========================================================================

    if (isFirefox) {
      // stub out MediaSession API until Firefox supports this natively
      if (!navigator.mediaSession) {
        const noop = () =&gt; {}
        const mediaSessionStub = {
          __installedByMetastreamRemote__: true,
          setActionHandler: noop
        }
        Object.defineProperty(window.navigator, 'mediaSession', {
          value: mediaSessionStub,
          enumerable: false,
          writable: true
        })

        function MediaMetadata(metadata) {
          Object.assign(this, metadata)
        }
        window.MediaMetadata = MediaMetadata
      }

      const { mediaSession } = navigator

      // Capture action handlers for player.js proxy
      mediaSession._handlers = {}

      const _setActionHandler = mediaSession.setActionHandler
      mediaSession.setActionHandler = function(name, handler) {
        mediaSession._handlers[name] = handler
        _setActionHandler.apply(mediaSession, arguments)
      }
    }

    //=========================================================================
    // document.domain fix (Firefox)
    //=========================================================================

    if (isFirefox) {
      const domains = ['twitch.tv', 'crunchyroll.com']

      // Fix for setting document.domain in sandboxed iframe
      try {
        const { domain } = document
        if (domain &amp;&amp; domains.some(d =&gt; domain.includes(d))) {
          Object.defineProperty(document, 'domain', {
            value: domain,
            writable: true
          })
        }
      } catch (e) {}
    }

    //=========================================================================
    // Inline script embed prevention fix
    //=========================================================================

    const observeScripts = () =&gt; {
      const scriptSnippets = [
        { code: 'window.top !== window.self', replacement: 'false' },
        { code: 'self == top', replacement: 'true' },
        { code: 'top.location != window.location', replacement: 'false' }
      ]

      const getAddedScripts = mutationList =&gt;
        mutationList.reduce((scripts, mutation) =&gt; {
          if (mutation.type !== 'childList') return scripts
          const inlineScripts = Array.from(mutation.addedNodes).filter(
            node =&gt; node instanceof HTMLScriptElement &amp;&amp; node.textContent.length &gt; 0
          )
          return inlineScripts.length &gt; 0 ? [...scripts, ...inlineScripts] : scripts
        }, [])

      // Modifies inline scripts to allow embedding content in iframe
      const inlineScriptModifier = mutationsList =&gt; {
        const scripts = getAddedScripts(mutationsList)
        for (let script of scripts) {
          for (let snippet of scriptSnippets) {
            if (script.textContent.includes(snippet.code)) {
              script.textContent = script.textContent.split(snippet.code).join(snippet.replacement)
            }
          }
        }
      }

      const observer = new MutationObserver(inlineScriptModifier)
      observer.observe(document.documentElement, { childList: true, subtree: true })

      // Stop watching for changes after we finish loading
      window.addEventListener('load', () =&gt; observer.disconnect())
    }

    observeScripts()
  }());</script>
<circle xmlns="http://www.w3.org/2000/svg" style="" cx="237.111" cy="236.966" r="236.966" fill="#3a5a98" data-original="#3a5a98" class=""/>
<path xmlns="http://www.w3.org/2000/svg" style="" d="M404.742,69.754c92.541,92.541,92.545,242.586-0.004,335.134  c-92.545,92.541-242.593,92.541-335.134,0L404.742,69.754z" fill="#345387" data-original="#345387" class=""/>
<path xmlns="http://www.w3.org/2000/svg" style="" d="M472.543,263.656L301.129,92.238l-88.998,88.998l5.302,5.302l-50.671,50.667l41.474,41.474  l-5.455,5.452l44.901,44.901l-51.764,51.764l88.429,88.429C384.065,449.045,461.037,366.255,472.543,263.656z" fill="#2e4d72" data-original="#2e4d72" class=""/>
<path xmlns="http://www.w3.org/2000/svg" style="" d="M195.682,148.937c0,7.27,0,39.741,0,39.741h-29.115v48.598h29.115v144.402h59.808V237.276h40.134  c0,0,3.76-23.307,5.579-48.781c-5.224,0-45.485,0-45.485,0s0-28.276,0-33.231c0-4.962,6.518-11.641,12.965-11.641  c6.436,0,20.015,0,32.587,0c0-6.623,0-29.481,0-50.592c-16.786,0-35.883,0-44.306,0C194.201,93.028,195.682,141.671,195.682,148.937  z" fill="#ffffff" data-original="#ffffff" class=""/>
<g xmlns="http://www.w3.org/2000/svg">
</g>
<g xmlns="http://www.w3.org/2000/svg">
</g>
<g xmlns="http://www.w3.org/2000/svg">
</g>
<g xmlns="http://www.w3.org/2000/svg">
</g>
<g xmlns="http://www.w3.org/2000/svg">
</g>
<g xmlns="http://www.w3.org/2000/svg">
</g>
<g xmlns="http://www.w3.org/2000/svg">
</g>
<g xmlns="http://www.w3.org/2000/svg">
</g>
<g xmlns="http://www.w3.org/2000/svg">
</g>
<g xmlns="http://www.w3.org/2000/svg">
</g>
<g xmlns="http://www.w3.org/2000/svg">
</g>
<g xmlns="http://www.w3.org/2000/svg">
</g>
<g xmlns="http://www.w3.org/2000/svg">
</g>
<g xmlns="http://www.w3.org/2000/svg">
</g>
<g xmlns="http://www.w3.org/2000/svg">
</g>
</g></svg>
